
  CREATE TABLE "ITOWER"."MST_USER_DESIGNATION" 
   (	"USER_DESG_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"USER_ID" NUMBER(10,0), 
	"DESIGNATION_ID" NUMBER(10,0), 
	"LOCATION_TYPE" NUMBER(2,0), 
	"LOCATION_ID" NUMBER(10,0), 
	"CREATED_BY" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"CREATED_DATE" DATE DEFAULT SYSDATE, 
	"LAST_MODIFIED_BY" VARCHAR2(100 BYTE), 
	"LAST_MODIFIED_DATE" DATE, 
	 CONSTRAINT "PK_MST_USER_DESIGNATION0" PRIMARY KEY ("USER_DESG_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 524288 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ETS_INDEX"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ETS_DATA" ;
 

  CREATE INDEX "ITOWER"."IDX_MST_USER_DESIGNATION" ON "ITOWER"."MST_USER_DESIGNATION" ("DESIGNATION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 720896 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ETS_INDEX" ;
 

  CREATE INDEX "ITOWER"."IDX_MST_USER_DESIGNATION_UID" ON "ITOWER"."MST_USER_DESIGNATION" ("USER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 589824 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "ETS_INDEX" ;
 

  CREATE OR REPLACE TRIGGER "ITOWER"."TRG_MST_USER_DESIGNATION_AFR0" 
AFTER UPDATE OR INSERT OR DELETE ON MST_USER_DESIGNATION
DECLARE
BEGIN
/*******************************************************************************************************
Created By - Manoj Yadav on 30th July 2016
Purpose - To insert in TXN_DATA_UPDATE_STATUS table in case any data updated/inserted/deleted.
*********************************************************************************************************/
    INSERT INTO TXN_DATA_UPDATE_STATUS(DATA_TYPE_ID,CREATED_BY,CREATED_DATE) VALUES(62,'TRG_MST_USER_DESIGNATION_AFR',SYSDATE);
END;
/
ALTER TRIGGER "ITOWER"."TRG_MST_USER_DESIGNATION_AFR0" ENABLE;
 

  CREATE OR REPLACE TRIGGER "ITOWER"."TRG_MST_USER_DESIGNATION_AFR" 
AFTER UPDATE OR INSERT OR DELETE ON MST_USER_DESIGNATION
DECLARE
BEGIN
/*******************************************************************************************************
Created By - Manoj Yadav on 30th July 2016
Purpose - To insert in TXN_DATA_UPDATE_STATUS table in case any data updated/inserted/deleted.
*********************************************************************************************************/
    INSERT INTO TXN_DATA_UPDATE_STATUS(DATA_TYPE_ID,CREATED_BY,CREATED_DATE) VALUES(62,'TRG_MST_USER_DESIGNATION_AFR',SYSDATE);
END;
/
ALTER TRIGGER "ITOWER"."TRG_MST_USER_DESIGNATION_AFR" ENABLE;
 

  CREATE OR REPLACE TRIGGER "ITOWER"."TRG_MST_USER_DESIGNATION_BFR" 
BEFORE INSERT OR UPDATE OR DELETE ON MST_USER_DESIGNATION FOR EACH ROW
/**************************************************************
Created BY - Manoj Yadav on 2nd July, 2013
Purpose - This trigger is used to update or insert the data in the histor table i.e. MST_USER_DESIGNATION_HIS
***************************************************************/
DECLARE
V_WEF_DATE      DATE;
V_WET_DATE      DATE;

BEGIN

    V_WEF_DATE := TRUNC(:NEW.CREATED_DATE);
    V_WET_DATE := TRUNC(:NEW.LAST_MODIFIED_DATE);

    IF INSERTING THEN

        SELECT NVL(:NEW.USER_DESG_ID,SQ_USER_DESG_ID.NEXTVAL) INTO :NEW.USER_DESG_ID FROM DUAL;

        INSERT INTO MST_USER_DESIGNATION_HIS (USER_DESG_ID,USER_ID,DESIGNATION_ID,LOCATION_TYPE,LOCATION_ID,WEF_DATE, WET_DATE,CREATED_DATE,CREATED_BY)
        VALUES(:NEW.USER_DESG_ID,:NEW.USER_ID,:NEW.DESIGNATION_ID,:NEW.LOCATION_TYPE,:NEW.LOCATION_ID,V_WEF_DATE,V_WET_DATE,SYSDATE,:NEW.CREATED_BY);

        :NEW.CREATED_DATE := SYSDATE;
        :NEW.LAST_MODIFIED_DATE := NULL;

    ELSIF UPDATING THEN

        IF :OLD.USER_DESG_ID=:NEW.USER_DESG_ID AND :NEW.USER_ID = :OLD.USER_ID AND (:NEW.LOCATION_TYPE <> :OLD.LOCATION_TYPE OR :NEW.LOCATION_ID <>:NEW.LOCATION_ID) THEN

            UPDATE MST_USER_DESIGNATION_HIS
            SET WET_DATE        = NVL(V_WEF_DATE-1,SYSDATE)
            WHERE USER_DESG_ID = :OLD.USER_DESG_ID
            AND NVL(WET_DATE,TRUNC(SYSDATE))>=TRUNC(SYSDATE);

            INSERT INTO MST_USER_DESIGNATION_HIS (USER_DESG_ID,USER_ID,DESIGNATION_ID,LOCATION_TYPE,LOCATION_ID,WEF_DATE, WET_DATE,CREATED_DATE,CREATED_BY)
            VALUES(:NEW.USER_DESG_ID,:NEW.USER_ID,:NEW.DESIGNATION_ID,:NEW.LOCATION_TYPE,:NEW.LOCATION_ID,V_WEF_DATE,V_WET_DATE,SYSDATE,:NEW.LAST_MODIFIED_BY);

        ELSIF :OLD.USER_DESG_ID=:NEW.USER_DESG_ID AND (:NEW.CREATED_DATE<>:OLD.CREATED_DATE OR :NEW.LAST_MODIFIED_DATE<>:OLD.LAST_MODIFIED_DATE) THEN   -----1.0 

            UPDATE MST_USER_DESIGNATION_HIS
            SET WEF_DATE        = V_WEF_DATE,
                WET_DATE        = V_WET_DATE
            WHERE USER_DESG_ID = :OLD.USER_DESG_ID
--            AND (WEF_DATE <> V_WEF_DATE OR NVL(WET_DATE,TO_DATE('1-JAN-4001','DD-MON-YYYY')) <> NVL(V_WET_DATE,TO_DATE('1-JAN-4001','DD-MON-YYYY')))
            AND NVL(WET_DATE,TRUNC(SYSDATE))>= TRUNC(SYSDATE);

        END IF;

        :NEW.CREATED_DATE := :OLD.CREATED_DATE;
        :NEW.LAST_MODIFIED_DATE := SYSDATE;

    END IF;

END;
/
ALTER TRIGGER "ITOWER"."TRG_MST_USER_DESIGNATION_BFR" ENABLE;
 

  CREATE OR REPLACE TRIGGER "ITOWER"."TRG_MST_USER_DESIGNATION_BFR0" 
BEFORE INSERT OR UPDATE OR DELETE ON MST_USER_DESIGNATION FOR EACH ROW
/**************************************************************
Created BY - Manoj Yadav on 2nd July, 2013
Purpose - This trigger is used to update or insert the data in the histor table i.e. MST_USER_DESIGNATION_HIS
***************************************************************/
DECLARE
V_WEF_DATE      DATE;
V_WET_DATE      DATE;

BEGIN

    V_WEF_DATE := TRUNC(:NEW.CREATED_DATE);
    V_WET_DATE := TRUNC(:NEW.LAST_MODIFIED_DATE);

    IF INSERTING THEN

        SELECT NVL(:NEW.USER_DESG_ID,SQ_USER_DESG_ID.NEXTVAL) INTO :NEW.USER_DESG_ID FROM DUAL;

        INSERT INTO MST_USER_DESIGNATION_HIS (USER_DESG_ID,USER_ID,DESIGNATION_ID,LOCATION_TYPE,LOCATION_ID,WEF_DATE, WET_DATE,CREATED_DATE,CREATED_BY)
        VALUES(:NEW.USER_DESG_ID,:NEW.USER_ID,:NEW.DESIGNATION_ID,:NEW.LOCATION_TYPE,:NEW.LOCATION_ID,V_WEF_DATE,V_WET_DATE,SYSDATE,:NEW.CREATED_BY);

        :NEW.CREATED_DATE := SYSDATE;
        :NEW.LAST_MODIFIED_DATE := NULL;

    ELSIF UPDATING THEN

        IF :OLD.USER_DESG_ID=:NEW.USER_DESG_ID AND :NEW.USER_ID = :OLD.USER_ID AND (:NEW.LOCATION_TYPE <> :OLD.LOCATION_TYPE OR :NEW.LOCATION_ID <>:NEW.LOCATION_ID) THEN

            UPDATE MST_USER_DESIGNATION_HIS
            SET WET_DATE        = NVL(V_WEF_DATE-1,SYSDATE)
            WHERE USER_DESG_ID = :OLD.USER_DESG_ID
            AND NVL(WET_DATE,TRUNC(SYSDATE))>=TRUNC(SYSDATE);

            INSERT INTO MST_USER_DESIGNATION_HIS (USER_DESG_ID,USER_ID,DESIGNATION_ID,LOCATION_TYPE,LOCATION_ID,WEF_DATE, WET_DATE,CREATED_DATE,CREATED_BY)
            VALUES(:NEW.USER_DESG_ID,:NEW.USER_ID,:NEW.DESIGNATION_ID,:NEW.LOCATION_TYPE,:NEW.LOCATION_ID,V_WEF_DATE,V_WET_DATE,SYSDATE,:NEW.LAST_MODIFIED_BY);

        ELSIF :OLD.USER_DESG_ID=:NEW.USER_DESG_ID AND (:NEW.CREATED_DATE<>:OLD.CREATED_DATE OR :NEW.LAST_MODIFIED_DATE<>:OLD.LAST_MODIFIED_DATE) THEN   -----1.0 

            UPDATE MST_USER_DESIGNATION_HIS
            SET WEF_DATE        = V_WEF_DATE,
                WET_DATE        = V_WET_DATE
            WHERE USER_DESG_ID = :OLD.USER_DESG_ID
--            AND (WEF_DATE <> V_WEF_DATE OR NVL(WET_DATE,TO_DATE('1-JAN-4001','DD-MON-YYYY')) <> NVL(V_WET_DATE,TO_DATE('1-JAN-4001','DD-MON-YYYY')))
            AND NVL(WET_DATE,TRUNC(SYSDATE))>= TRUNC(SYSDATE);

        END IF;

        :NEW.CREATED_DATE := :OLD.CREATED_DATE;
        :NEW.LAST_MODIFIED_DATE := SYSDATE;

    END IF;

END;
/
ALTER TRIGGER "ITOWER"."TRG_MST_USER_DESIGNATION_BFR0" ENABLE;
 
