@model App.Models.Entity.Customer.CustomerEntity
@Scripts.Render("~/Scripts/jquery.validate.js")
@Scripts.Render("~/Scripts/jquery.validate.unobtrusive.js")
@Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")
<script type="text/javascript">
    $(function () {
        $("select").multiselect();

    });
    function OnSuccess(result) {
        if (result.flag == "S") {
            window.location = '#/AddEmployee';
        }
    }
    function OnFailure(error) {
        alert(error);
    }
</script>
@if (this.ViewContext.FormContext == null)
{
    this.ViewContext.FormContext = new FormContext();
}
<div class="container">
    <div class="row">
        <div class="lgnarea area2">
            @using (Ajax.BeginForm("SaveCustomer", new { Controller = "Dev" },
                                                               new AjaxOptions
                                                               {
                                                                   HttpMethod = "POST",
                                                                   OnSuccess = "OnSuccess",
                                                                   OnFailure = "OnFailure",
                                                                   LoadingElementId = "progress"
                                                               }))
            {
                <div class="area2-title">
                    <span class="float-left">
                        <a href="#/Index">
                            <i class="fa fa-arrow-left"></i>
                        </a>
                        New Customer
                    </span>
                    <span class="float-right">
                        <input type="submit" class="btn btn-info" value="Save & Continue" />
                    </span>
                </div>
                <hr />
                <div class="area2-form">
                    <ul>
                        <li>
                            @Html.LabelFor(model => model.customerName)
                            @Html.TextBoxFor(model => model.customerName, new { @tabindex = "1", @id = "customerName", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.customerName)
                        </li>
                        <li>
                            @Html.LabelFor(model => model.emailAddress)
                            @Html.TextBoxFor(model => model.emailAddress, new { @tabindex = "2", @id = "emailAddress", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.emailAddress)
                        </li>
                        <li>
                            @Html.LabelFor(model => model.phoneNo)
                            @Html.TextBoxFor(model => model.phoneNo, new { @tabindex = "3", @id = "phoneNo", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.phoneNo)
                        </li>
                        <li>
                            @Html.LabelFor(model => model.mobileNo)
                            @Html.TextBoxFor(model => model.mobileNo, new { @tabindex = "4", @id = "mobileNo", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.mobileNo)
                        </li>
                        <li>
                            @Html.LabelFor(model => model.countryId)
                            @Html.DropDownListFor(m => m.countryId, Model.countryList, "Please select", new { @id = "countryId", onchange = "GetStates(this,'StateId')" })
                            @Html.ValidationMessageFor(model => model.countryId)
                        </li>
                        <li>
                            @Html.LabelFor(model => model.stateId)
                            @Html.DropDownListFor(m => m.stateId, Model.stateList, "Please select", new { @id = "stateId", onchange = "GetStates(this,'StateId')" })
                            @Html.ValidationMessageFor(model => model.stateId)
                        </li>
                        <li>
                            @Html.LabelFor(model => model.cityId)
                            @Html.DropDownListFor(m => m.cityId, Model.cityList, "Please select", new { @id = "cityId", onchange = "GetStates(this,'StateId')" })
                            @Html.ValidationMessageFor(model => model.cityId)
                        </li>
                        <li>
                            @Html.LabelFor(model => model.address)
                            @Html.TextAreaFor(model => model.address, new { @tabindex = "4", @id = "address", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.address)
                        </li>
                        <li>
                            @Html.LabelFor(model => model.pincode)
                            @Html.TextBoxFor(model => model.pincode, new { @tabindex = "4", @id = "pincode", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.pincode)
                        </li>
                        <li>
                            @Html.LabelFor(model => model.website)
                            @Html.TextBoxFor(model => model.website, new { @tabindex = "4", @id = "website", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.website)
                        </li>
                        <li>
                            @Html.LabelFor(model => model.faxNo)
                            @Html.TextBoxFor(model => model.faxNo, new { @tabindex = "4", @id = "faxNo", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.faxNo)
                        </li>
                    </ul>
                </div>
            }
        </div>
    </div>
</div>
